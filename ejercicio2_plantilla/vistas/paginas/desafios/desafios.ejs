<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Desafíos</title>
</head>

  <h1>Desafíos:</h1>

  <% if (desafios.length > 0) { %>
    <div class="challenge-grid">
      <% desafios.forEach(desafio => { %>
        <div class="challenge-container">
          <h2><%= desafio.descripcion %></h2>
          <div class="progress-bar">
            <div id="progress-<%= desafio.id %>" class="progress">
              <%= Math.min((desafio.puntos / desafio.puntuacionObjetivo) * 100, 100).toFixed(0) %>%
            </div>
          </div>
          <p>
            <% if (desafio.tipo === 0) { %>
              Likes: <%= desafio.puntos %> / <%= desafio.puntuacionObjetivo %>
            <% } else if (desafio.tipo === 1) { %>
              Fotos: <%= desafio.puntos %> / <%= desafio.puntuacionObjetivo %>
            <% } else if (desafio.tipo === 2) { %>
              Comentarios: <%= desafio.puntos %> / <%= desafio.puntuacionObjetivo %>
            <% } %>
          </p>
          <% if (session.rol === 'A') { %>
            <button class="botonborrardesafio" data-id="<%= desafio.id %>">Borrar</button>
          <% } %>
        </div>
      <% }) %>
    </div>
  <% } else { %>
    <p>No tienes desafíos asignados.</p>
  <% } %>

  <% if (session.rol === 'A') { %>
    <div class="admin-panel">
      <h2>Crear un nuevo desafío</h2>
      <form id="crearDesafioForm" action="/contenido/desafios/crear" method="POST">
        <label for="puntuacionObjetivo">Puntuación Objetivo:</label>
        <input type="number" id="puntuacionObjetivo" name="puntuacionObjetivo" required>
        
        <label for="descripcion">Descripción:</label>
        <textarea id="descripcion" name="descripcion" rows="3" required></textarea>

        <label for="tipo">Tipo:</label>
        <select id="tipo" name="tipo" required>
          <option value="0">Likes</option>
          <option value="1">Fotos Subidas</option>
          <option value="2">Comentarios</option>
        </select>

        <button type="submit">Crear Desafío</button>
      </form>
    </div>
  <% } %>

  <script>
    // Actualizar las barras de progreso dinámicamente
    const desafios = JSON.parse('<%- JSON.stringify(desafios) %>');

    desafios.forEach(desafio => {
      const progressBar = document.getElementById(`progress-${desafio.id}`);
      const progressPercentage = Math.min((desafio.puntos / desafio.puntuacionObjetivo) * 100, 100);
      progressBar.style.width = progressPercentage + '%';
      progressBar.innerText = Math.round(progressPercentage) + '%';
    });

    // Manejar el envío del formulario
    const form = document.getElementById('crearDesafioForm');

    form.addEventListener('submit', async (event) => {
      event.preventDefault(); // Evitar el envío normal del formulario

      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());

      try {
        const response = await fetch(form.action, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data),
        });

        if (response.ok) {
          alert('¡Desafío creado con éxito!'); // Mostrar el popup de éxito
          location.reload(); // Recargar la página
        } else {
          alert('Hubo un error al crear el desafío.'); // Mostrar un popup de error
          console.error('Error al crear el desafío');
        }
      } catch (error) {
        alert('Error al enviar el formulario.'); // Mostrar un popup de error
        console.error('Error al enviar el formulario:', error);
      }
    });
  </script>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const botonesBorrar = document.querySelectorAll('.botonborrardesafio');

      botonesBorrar.forEach(boton => {
        boton.addEventListener('click', async (event) => {
          const desafioId = boton.getAttribute('data-id');

          if (confirm('¿Estás segur@ de que deseas borrar este desafío?')) {
            try {
              const response = await fetch(`/contenido/desafios/${desafioId}`, {
                method: 'DELETE',
              });

              if (response.ok) {
                alert('¡Desafío borrado con éxito!');
                location.reload(); // Recargar la página para actualizar la lista
              } else {
                alert('Hubo un error al borrar el desafío.');
              }
            } catch (error) {
              console.error('Error al borrar el desafío:', error);
              alert('Error al borrar el desafío.');
            }
          }
        });
      });
    });
  </script>
</body>
</html>
